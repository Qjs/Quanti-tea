syntax = "proto3";

package metrics;

option go_package = "./server/proto;metrics";

service MetricsService {
  rpc AddMetric(AddMetricRequest) returns (AddMetricResponse);
  rpc IncrementMetric(IncrementMetricRequest) returns (IncrementMetricResponse);
  rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse);
  rpc UpdateMetric(UpdateMetricRequest) returns (UpdateMetricResponse);
  rpc DecrementMetric(DecrementMetricRequest) returns (DecrementMetricResponse);
  rpc DeleteMetric(DeleteMetricRequest) returns (DeleteMetricResponse);
}

message AddMetricRequest {
  string metric_name = 1;
  string type = 2; // e.g., Food, Health, Brain, House
  string unit = 3; // e.g., Counts, mg, min
  bool reset_daily = 4; // Indicates if the metric should reset daily
}

message AddMetricResponse {
  bool success = 1;
  string message = 2;
}

message DeleteMetricRequest {
    string metric_name = 1;
}

message DeleteMetricResponse {
    bool success = 1;
    string message = 2;
}

message IncrementMetricRequest {
  string metric_name = 1;
  double increment = 2;
}

message IncrementMetricResponse {
  bool success = 1;
  string message = 2;
}

message UpdateMetricRequest {
  string metric_name = 1;
  double new_value = 2;
}

message UpdateMetricResponse {
  bool success = 1;
  string message =2;
}

message DecrementMetricRequest {
  string metric_name = 1;
  double decrement = 2;
}

message DecrementMetricResponse {
  bool success = 1;
  string message = 2;
}

message GetMetricsRequest {}

message Metric {
  string metric_name = 1;
  string type = 2;
  string unit = 3;
  double value = 4;
  bool reset_daily = 5;
  string last_reset = 6;
}

message GetMetricsResponse {
  repeated Metric metrics = 1;
}
